def isValidSudoku(board):
    """
    :type board: List[List[str]]
    :rtype: bool
    """
    # Check Row and Column
    for i in range(9):
        row = set()
        for j in range(9):
            if board[i][j] != '.':
                if int(board[i][j]) in row:
                    return False
                row.add(int(board[i][j]))
        col = set()
        for j in range(9):
            if board[j][i] != '.':
                if int(board[j][i]) in col:
                    return False
                col.add(int(board[j][i]))
    
    # Check 3x3 sub-squares
    hashmap = {}
    for row in range(9):
        for col in range(9):
            sq_index = (row // 3) * 3 + (col // 3)
            if sq_index not in hashmap:
                hashmap[sq_index] = set()
            if board[row][col] != '.':
                if int(board[row][col]) in hashmap[sq_index]:
                    return False
                hashmap[sq_index].add(int(board[row][col]))

    return True


print(isValidSudoku([["5","3",".",".","7",".",".",".","."]
                    ,["6",".",".","1","9","5",".",".","."]
                    ,[".","9","8",".",".",".",".","6","."]
                    ,["8",".",".",".","6",".",".",".","3"]
                    ,["4",".",".","8",".","3",".",".","1"]
                    ,["7",".",".",".","2",".",".",".","6"]
                    ,[".","6",".",".",".",".","2","8","."]
                    ,[".",".",".","4","1","9",".",".","5"]
                    ,[".",".",".",".","8",".",".","7","9"]])) # Output: True
print(isValidSudoku([["8","3",".",".","7",".",".",".","."]
                    ,["6",".",".","1","9","5",".",".","."]
                    ,[".","9","8",".",".",".",".","6","."]
                    ,["8",".",".",".","6",".",".",".","3"]
                    ,["4",".",".","8",".","3",".",".","1"]
                    ,["7",".",".",".","2",".",".",".","6"]
                    ,[".","6",".",".",".",".","2","8","."]
                    ,[".",".",".","4","1","9",".",".","5"]
                    ,[".",".",".",".","8",".",".","7","9"]])) # Output: False
print(isValidSudoku([
                    ["1","2",".",".","3",".",".",".","."],
                    ["4",".",".","5",".",".",".",".","."],
                    [".","9","8",".",".",".",".",".","3"],
                    ["5",".",".",".","6",".",".",".","4"],
                    [".",".",".","8",".","3",".",".","5"],
                    ["7",".",".",".","2",".",".",".","6"],
                    [".",".",".",".",".",".","2",".","."],
                    [".",".",".","4","1","9",".",".","8"],
                    [".",".",".",".","8",".",".","7","9"]])) # Output: True
print(isValidSudoku([
                    ["1","2",".",".","3",".",".",".","."],
                    ["4",".",".","5",".",".",".",".","."],
                    [".","9","1",".",".",".",".",".","3"],
                    ["5",".",".",".","6",".",".",".","4"],
                    [".",".",".","8",".","3",".",".","5"],
                    ["7",".",".",".","2",".",".",".","6"],
                    [".",".",".",".",".",".","2",".","."],
                    [".",".",".","4","1","9",".",".","8"],
                    [".",".",".",".","8",".",".","7","9"]])) # Output: False